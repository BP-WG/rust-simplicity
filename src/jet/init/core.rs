/* This file has been automatically generated. */

use crate::jet::application::Core;
use crate::jet::type_name::TypeName;
use crate::jet::JetNode;
use crate::merkle::cmr::Cmr;
use bitcoin_hashes::sha256::Midstate;

/// Identifiers of all possible Core jets
#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Debug, Hash)]
pub enum CoreJetName {
    Add32,
    FullAdd32,
    Sub32,
    FullSub32,
    Mul32,
    FullMul32,
    Eq32Verify,
    Eq256Verify,
    Lt32Verify,
    Sha256,
    Sha256Block,
    Bip0340Verify,
}

pub const ADD32: JetNode<Core> = JetNode {
    name: CoreJetName::Add32,
    cmr: Cmr(Midstate([
        0x5d, 0x5c, 0x8f, 0xf3, 0x86, 0xd5, 0xa0, 0x14, 0x08, 0xe9, 0xe0, 0x79, 0xed, 0x95, 0x2c,
        0xb9, 0xc1, 0xdc, 0x86, 0x14, 0xfc, 0x1f, 0x3e, 0x54, 0x61, 0xab, 0x1c, 0x30, 0x24, 0xdc,
        0xea, 0x54,
    ])),
    source_ty: TypeName(b"l"),
    target_ty: TypeName(b"*2i"),
};

pub const FULL_ADD32: JetNode<Core> = JetNode {
    name: CoreJetName::FullAdd32,
    cmr: Cmr(Midstate([
        0xf0, 0x95, 0x9d, 0x3c, 0xb9, 0x2c, 0x72, 0x8c, 0xd0, 0x86, 0x26, 0x81, 0x71, 0xaa, 0x1f,
        0xdd, 0x5c, 0x97, 0x4c, 0xbe, 0x3f, 0xf6, 0x4a, 0x09, 0x94, 0x13, 0x28, 0x76, 0x6d, 0x24,
        0xbf, 0xf1,
    ])),
    source_ty: TypeName(b"*l2"),
    target_ty: TypeName(b"*2i"),
};

pub const SUB32: JetNode<Core> = JetNode {
    name: CoreJetName::Sub32,
    cmr: Cmr(Midstate([
        0x01, 0x6d, 0x32, 0x48, 0xee, 0x72, 0x7e, 0xb7, 0x27, 0xc3, 0x3a, 0xa6, 0xf2, 0xcf, 0xb8,
        0xb8, 0x7e, 0x7d, 0x07, 0x46, 0x55, 0x40, 0xdc, 0x3f, 0x9a, 0xb3, 0x22, 0x93, 0x78, 0x85,
        0x2a, 0xc7,
    ])),
    source_ty: TypeName(b"l"),
    target_ty: TypeName(b"*2i"),
};

pub const FULL_SUB32: JetNode<Core> = JetNode {
    name: CoreJetName::FullSub32,
    cmr: Cmr(Midstate([
        0x34, 0x73, 0xfa, 0x10, 0xe0, 0xe7, 0xd9, 0x80, 0x2d, 0x53, 0x3b, 0x13, 0x01, 0xb2, 0x09,
        0x83, 0x85, 0x92, 0xb3, 0x1a, 0xf9, 0xd9, 0x14, 0xb0, 0xe7, 0x46, 0x11, 0x32, 0xf5, 0x3d,
        0x79, 0x7a,
    ])),
    source_ty: TypeName(b"*l2"),
    target_ty: TypeName(b"*2i"),
};

pub const MUL32: JetNode<Core> = JetNode {
    name: CoreJetName::Mul32,
    cmr: Cmr(Midstate([
        0x02, 0x44, 0x52, 0xa5, 0x7a, 0xc5, 0x8c, 0xd0, 0xa1, 0x97, 0x57, 0xbb, 0xf1, 0x68, 0xa3,
        0xa8, 0xcb, 0x6a, 0x02, 0x38, 0xa8, 0x0f, 0x61, 0x81, 0x3e, 0xf7, 0x9c, 0x92, 0x6c, 0x8f,
        0x08, 0x9e,
    ])),
    source_ty: TypeName(b"l"),
    target_ty: TypeName(b"l"),
};

pub const FULL_MUL32: JetNode<Core> = JetNode {
    name: CoreJetName::FullMul32,
    cmr: Cmr(Midstate([
        0x47, 0xe0, 0xca, 0x35, 0x3a, 0x6f, 0x93, 0x4b, 0xd9, 0x97, 0x5d, 0xfe, 0x04, 0x27, 0x62,
        0x96, 0x42, 0x94, 0xf7, 0x51, 0xd1, 0xd4, 0x6d, 0x39, 0xcf, 0xa5, 0xee, 0x5f, 0x3a, 0x37,
        0x8b, 0xfd,
    ])),
    source_ty: TypeName(b"*ll"),
    target_ty: TypeName(b"l"),
};

pub const EQ32_VERIFY: JetNode<Core> = JetNode {
    name: CoreJetName::Eq32Verify,
    cmr: Cmr(Midstate([
        0x32, 0x61, 0x8d, 0x01, 0xfb, 0xfe, 0x81, 0x9f, 0x29, 0x69, 0xb7, 0x1c, 0xda, 0xbf, 0x40,
        0x5d, 0xde, 0x3d, 0xa1, 0x7c, 0x04, 0x45, 0xe8, 0xd0, 0x53, 0x47, 0x65, 0x7c, 0x5b, 0x53,
        0x2f, 0x72,
    ])),
    source_ty: TypeName(b"l"),
    target_ty: TypeName(b"1"),
};

pub const EQ256_VERIFY: JetNode<Core> = JetNode {
    name: CoreJetName::Eq256Verify,
    cmr: Cmr(Midstate([
        0x7c, 0x1d, 0x68, 0x82, 0xe5, 0x38, 0x22, 0xe8, 0x0c, 0x5d, 0x7d, 0x36, 0xf8, 0x59, 0xc1,
        0xc4, 0x02, 0xfe, 0x29, 0x10, 0xcf, 0xbc, 0xa2, 0x32, 0xc0, 0x67, 0x97, 0x25, 0x6b, 0xe3,
        0xdb, 0x07,
    ])),
    source_ty: TypeName(b"*hh"),
    target_ty: TypeName(b"1"),
};

pub const LT32_VERIFY: JetNode<Core> = JetNode {
    name: CoreJetName::Lt32Verify,
    cmr: Cmr(Midstate([
        0xa1, 0xfa, 0x71, 0x96, 0xbe, 0x58, 0x35, 0x47, 0xcf, 0xb5, 0x15, 0x25, 0xc7, 0x65, 0x2f,
        0xc2, 0x14, 0x0c, 0x70, 0x46, 0xab, 0xab, 0x4a, 0x8c, 0x3a, 0x25, 0x1f, 0x1e, 0xa3, 0xc3,
        0x94, 0xc1,
    ])),
    source_ty: TypeName(b"l"),
    target_ty: TypeName(b"1"),
};

pub const SHA256: JetNode<Core> = JetNode {
    name: CoreJetName::Sha256,
    cmr: Cmr(Midstate([
        0xd6, 0x49, 0xd3, 0x03, 0xd1, 0x96, 0xcd, 0x53, 0xfe, 0x29, 0x86, 0xfc, 0x6b, 0x81, 0x25,
        0x08, 0xb5, 0x5d, 0x23, 0xaa, 0xa3, 0x92, 0xf4, 0xf3, 0xa7, 0xd0, 0x8c, 0x6c, 0xad, 0xb2,
        0xf8, 0xac,
    ])),
    source_ty: TypeName(b"h"),
    target_ty: TypeName(b"h"),
};

pub const SHA256_BLOCK: JetNode<Core> = JetNode {
    name: CoreJetName::Sha256Block,
    cmr: Cmr(Midstate([
        0xd5, 0xb6, 0xf8, 0x48, 0x44, 0x17, 0x32, 0x12, 0xe2, 0x69, 0x9e, 0x99, 0xa8, 0x9b, 0xcd,
        0x3e, 0xb7, 0xf8, 0xe9, 0x6c, 0x0c, 0xc8, 0x46, 0x7f, 0x1c, 0xf2, 0xc2, 0x50, 0x14, 0x74,
        0x59, 0x48,
    ])),
    source_ty: TypeName(b"*h*hh"),
    target_ty: TypeName(b"h"),
};

pub const BIP_0340_VERIFY: JetNode<Core> = JetNode {
    name: CoreJetName::Bip0340Verify,
    cmr: Cmr(Midstate([
        0xd6, 0xdf, 0x54, 0x94, 0x7e, 0xb9, 0x27, 0x86, 0xb3, 0x79, 0xd3, 0xec, 0x81, 0x93, 0x99,
        0x4a, 0x0f, 0xfe, 0xdd, 0xc2, 0x86, 0x46, 0xa9, 0x21, 0x4e, 0xea, 0xc8, 0xf9, 0x34, 0x1f,
        0x56, 0x4e,
    ])),
    source_ty: TypeName(b"**hh*hh"),
    target_ty: TypeName(b"1"),
};
